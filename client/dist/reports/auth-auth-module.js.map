{"version":3,"sources":["./src/app/auth/auth.routing.module.ts","./src/app/directives/focus.directive.ts","./src/app/services/forms.service.ts","./src/app/auth/confirm/confirm.component.ts","./src/app/auth/confirm/confirm.component.html","./src/app/auth/confirm/keyboard-button/keyboard-button.component.ts","./src/app/auth/confirm/keyboard-button/keyboard-button.component.html","./src/app/auth/auth.module.ts","./src/app/services/keyboard.service.ts","./src/app/directives/virtual-key.ts","./src/app/auth/confirm/keyboard/keyboard.component.ts","./src/app/auth/confirm/keyboard/keyboard.component.html","./src/app/auth/id/id.component.ts","./src/app/auth/id/id.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACP;AACe;;;AAE/D,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,4DAAW;KACzB;IACD;QACI,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB;KAC/C;CACJ;AAWM,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBARjB;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAChC;QAEG,4DAAY;mIAIP,iBAAiB,uFAJtB,4DAAY;6FAIP,iBAAiB;cAT7B,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAChC;gBACD,OAAO,EAAE;oBACL,4DAAY;iBACf;aACJ;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAmF;;AAK5E,MAAM,mBAAmB;IAE5B,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IAGhD,KAAK;QACD,UAAU,CAAC,GAAG,EAAE;YACZ,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC;YACzE,IAAI,KAAK,EAAE;gBACP,KAAK,CAAC,KAAK,EAAE,CAAC;aACjB;QACL,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;;sFAZQ,mBAAmB;mGAAnB,mBAAmB;;;6FAAnB,mBAAmB;cAH/B,uDAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;aAC9B;;kBAKI,0DAAY;mBAAC,OAAO;;;;;;;;;;;;;;ACTzB;AAAA;AAAA;AAA2C;;AAOpC,MAAM,YAAY;IAGrB;IAAgB,CAAC;IAGjB,iBAAiB,CAAC,OAAoB;QAClC,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACvD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAID,YAAY,CAAC,KAAsB;QAC/B,OAAO;YACH,UAAU,EAAE,KAAK,CAAC,KAAK;YACvB,YAAY,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO;SAC/C;IACL,CAAC;;wEApBQ,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;6FAET,YAAY;cAHxB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;AAWnC,MAAM,gBAAgB;IAEzB,YAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAElD,iBAAiB,CAAC,IAAY;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,OAAO;YAAE,OAAM;QAExB,IAAI,IAAI,GAAW,EAAE;QACrB,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;YAC1B,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;SAC1B;QAED,MAAM,UAAU,GAAgB;YAC5B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC;SACrB;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,QAAQ,CAAC,KAAU;QACf,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QAC7B,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1C;IACL,CAAC;;gFA1BQ,gBAAgB;gGAAhB,gBAAgB;;QCX7B,yEACI;QAAA,uEAAe;QAAA,wLAAyB;QAAA,4DAAI;QAC5C,6EACI;QAD+B,4RAAY,4BAAuB,IAAC;QACnE,yEACI;QAAA,8EAEA;QADmB,6IAAS,oBAAgB,IAAC;QAD7C,4DAEA;QAAA,8EAEA;QADmB,6IAAS,oBAAgB,IAAC;QAD7C,4DAEA;QAAA,gFAEA;QADqB,8IAAS,oBAAgB,IAAC;QAD/C,4DAEA;QAAA,iFAEJ;QADwB,8IAAS,oBAAgB,IAAC;QAD9C,4DAEJ;QAAA,4DAAM;QACN,2EAAuB;QAAA,+HAAY;QAAA,4DAAM;QAGzC,2EAA6B;QACjC,4DAAO;QACP,yEAAO;QAAA,iKAAqB;QAAA,4DAAQ;QACxC,4DAAM;;6FDRO,gBAAgB;cAL5B,uDAAS;eAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aAC1C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAiD;;AAO1C,MAAM,uBAAuB;;8FAAvB,uBAAuB;uGAAvB,uBAAuB;QCPpC,yEACI;QAAA,yEAAiB;QAAA,uDAAU;QAAA,4DAAM;QACrC,4DAAM;;QADe,0DAAU;QAAV,2EAAU;;6FDMlB,uBAAuB;cALnC,uDAAS;eAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAClD;;kBAEI,mDAAK;;;;;;;;;;;;;;AERV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACC;AACe;AACG;AACF;AAC8B;AACd;AACZ;AACV;AACH;;AAmBhD,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBARV;YACL,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,sEAAiB;YACjB,mEAAY;SACf;mIAEQ,UAAU,mBAff,4DAAW;QACX,2EAAgB;QAChB,2EAAmB;QACnB,0GAAuB;QACvB,2FAAiB;QACjB,+EAAmB,aAGnB,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,sEAAiB;QACjB,mEAAY;6FAGP,UAAU;cAjBtB,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,4DAAW;oBACX,2EAAgB;oBAChB,2EAAmB;oBACnB,0GAAuB;oBACvB,2FAAiB;oBACjB,+EAAmB;iBACtB;gBACD,OAAO,EAAE;oBACL,4DAAY;oBACZ,0DAAW;oBACX,kEAAmB;oBACnB,sEAAiB;oBACjB,mEAAY;iBACf;aACJ;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAyD;;AAOlD,MAAM,eAAe;IAIxB;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,0DAAY,EAAE,CAAC;IAC5C,CAAC;IAGD,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;IAED,OAAO,CAAC,GAAW;QACf,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,UAAU,CAAC,OAAyB;QAChC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;IAChC,CAAC;;8EApBQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA4E;;;;AAOrE,MAAM,mBAAmB;IAE5B,YACY,gBAA4B,EAC5B,OAAgB,EAChB,eAAgC;QAFhC,qBAAgB,GAAhB,gBAAgB,CAAY;QAC5B,YAAO,GAAP,OAAO,CAAS;QAChB,oBAAe,GAAf,eAAe,CAAiB;IACxC,CAAC;IAEL,QAAQ;QAEJ,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5C,IAAI,QAAQ,CAAC,aAAa,KAAK,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;gBAChE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAE3C,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE;oBAC7B,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE,IAAI;iBACnB,CAAC,CAAC;gBAEH,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAC5D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,OAAO;QACH,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;;sFA3BQ,mBAAmB;mGAAnB,mBAAmB;;;6FAAnB,mBAAmB;cAH/B,uDAAS;eAAC;gBACP,QAAQ,EAAE,wBAAwB;aACrC;;kBAyBI,0DAAY;mBAAC,OAAO;;;;;;;;;;;;;;AC/BzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;ICCtC,yFACsB;IADgD,wZAAuC;IAC7G,4DAAsB;;;IAD8B,+EAAiB;;ADOlE,MAAM,iBAAiB;IAG1B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAFpD,YAAO,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEK,CAAC;IAEzD,aAAa,CAAC,CAAQ,EAAE,GAAW;QAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,mBAAmB;QACnB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;;kFATQ,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEACI;QAAA,6IACA;QACJ,4DAAM;;QAFmB,0DAA8B;QAA9B,gFAA8B;;6FDO1C,iBAAiB;cAL7B,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACzC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICgBtC,0EAAkD;IAAA,uGAAS;IAAA,4DAAM;;;IACjE,0EAAiD;IAAA,yJAAmB;IAAA,4DAAM;;;IAF9E,0EACI;IAAA,+GAAkD;IAClD,+GAAiD;IACrD,4DAAM;;;;IAFiB,0DAA8B;IAA9B,uFAA8B;IAC9B,0DAA6B;IAA7B,sFAA6B;;ADNrD,MAAM,WAAW;IAEpB,YACY,WAAwB,EACzB,YAA0B,EACzB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAc;QACzB,WAAM,GAAN,MAAM,CAAQ;IACtB,CAAC;IAEL,QAAQ,KAAW,CAAC;IAGpB,QAAQ,CAAC,IAAY;QACjB,IAAI,IAAI,CAAC,OAAO;YAAE,OAAO;QAEzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;aACnC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;QAC3C,CAAC,CAAC;IACV,CAAC;;sEAnBQ,WAAW;2FAAX,WAAW;;QCXxB,yEAEI;QAAA,yEACI;QAAA,qEAAI;QAAA,uGAAS;QAAA,4DAAK;QAClB,oEAAG;QAAA,uOAAgC;QAAA,4DAAI;QAC3C,4DAAM;QACN,6EACI;QADiB,uRAAY,mBAAc,IAAC;QAC5C,yEACI;QAAA,2EAAoB;QAAA,yEAAG;QAAA,4DAAQ;QAC/B,0EACI;QAAA,0EAGJ;QAAA,4DAAM;QACV,4DAAM;QACN,yGACI;QAGJ,8EACI;QAAA,4FACJ;QAAA,4DAAS;QACb,4DAAO;QACX,4DAAM;;;;QAbiB,2DAA0D;QAA1D,iHAA0D;QAK5C,0DAA2D;QAA3D,mHAA2D;QAI7D,0DAAyB;QAAzB,mFAAyB;;6FDR/C,WAAW;cALvB,uDAAS;eAAC;gBACP,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,qBAAqB;gBAClC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACrC","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IdComponent } from \"./id/id.component\";\r\nimport { ConfirmComponent } from \"./confirm/confirm.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'id',\r\n        component: IdComponent\r\n    },\r\n    {\r\n        path: 'confirm', component: ConfirmComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class AuthRoutingModule { }","import { AfterViewInit, Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appInputFocus]'\r\n})\r\nexport class InputFocusDirective {\r\n\r\n    constructor(private formElement: ElementRef) { }\r\n\r\n    @HostListener('input')\r\n    check() {\r\n        setTimeout(() => {\r\n            const input = this.formElement.nativeElement.querySelector('.ng-invalid')\r\n            if (input) {\r\n                input.focus();\r\n            }\r\n        }, 0);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n\r\n\r\n    constructor() { }\r\n\r\n\r\n    formControlStatus(control: FormControl): boolean {\r\n        if (control.invalid && (control.dirty || control.touched)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    displayClass(input: AbstractControl) {\r\n        return {\r\n            'is-valid': input.valid,\r\n            'is-invalid': input.touched && input.invalid\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //  displayErrorMessage(control: FormControl): string {\r\n    //     if (control.hasError('required')) {\r\n    //         return 'This field is reqiured';\r\n    //     }\r\n    //     else if (control.hasError('minlength')) {\r\n    //         return 'To short';\r\n    //     }\r\n    //     else if (control.hasError('pattern')) {\r\n    //         return 'Invalid Pattern';\r\n    //     }\r\n    //     return '';\r\n    // }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ConfirmCode } from 'src/app/interfaces/ConfirmCode';\r\nimport { FormsService } from \"../../services/forms.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-confirm',\r\n    templateUrl: './confirm.component.html',\r\n    styleUrls: ['./confirm.component.scss']\r\n})\r\nexport class ConfirmComponent {\r\n\r\n    constructor(public formsService: FormsService) { }\r\n\r\n    onSendConfirmCode(form: NgForm): void {\r\n        console.log(form)\r\n        if (form.invalid) return\r\n\r\n        let code: string = ''\r\n        for (const num in form.value) {\r\n            code += form.value[num]\r\n        }\r\n\r\n        const codeToSend: ConfirmCode = {\r\n            code: Number(code)\r\n        }\r\n\r\n        console.log(form.value)\r\n        console.log(codeToSend)\r\n    }\r\n\r\n    onChange(event: any): void {\r\n        let { value } = event.target;\r\n        if (String(value).length > 1) {\r\n            event.target.value = value.slice(1, 2);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","<div class=\"confirmWrapper\">\r\n    <p class=\"m-3\">נשלח מסרון, נא הזינו הקוד</p>\r\n    <form #form=\"ngForm\" appInputFocus (ngSubmit)=\"onSendConfirmCode(form)\" class=\"m-3\">\r\n        <div class=\"smsCode\">\r\n            <input id=\"num-a\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"first\" autofocus ngModel=\"virtualkey\"\r\n                #one=\"ngModel\" (input)=\"onChange($event)\">\r\n            <input id=\"num-b\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"second\" required ngModel=\"virtualkey\"\r\n                #two=\"ngModel\" (input)=\"onChange($event)\">\r\n            <input id=\"num-c\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"third\" ngModel=\"virtualkey\"\r\n                #three=\"ngModel\" (input)=\"onChange($event)\">\r\n            <input id=\"num-d\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"fourth\" ngModel=\"virtualkey\"\r\n                #four=\"ngModel\" (input)=\"onChange($event)\">\r\n        </div>\r\n        <div class=\"codeError\">הסיסמא שגויה</div>\r\n        <!-- <div *ngIf=\"form.invalid && form.submitted\">Missig number</div> -->\r\n\r\n        <app-keyboard></app-keyboard>\r\n    </form>\r\n    <small>לא הגיע קוד, שלח מחדש</small>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-keyboard-button',\r\n    templateUrl: './keyboard-button.component.html',\r\n    styleUrls: ['./keyboard-button.component.scss']\r\n})\r\nexport class KeyboardButtonComponent {\r\n    @Input() number: number\r\n}\r\n","<div class=\"num-keyboard\">\r\n    <div class=\"key\">{{number}}</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IdComponent } from './id/id.component';\r\nimport { ConfirmComponent } from './confirm/confirm.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { VirtualKeyDirective } from \"../directives/virtual-key\";\r\nimport { KeyboardButtonComponent } from \"./confirm/keyboard-button/keyboard-button.component\";\r\nimport { KeyboardComponent } from \"../auth/confirm/keyboard/keyboard.component\";\r\nimport { InputFocusDirective } from '../directives/focus.directive';\r\nimport { AuthRoutingModule } from \"./auth.routing.module\";\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        IdComponent,\r\n        ConfirmComponent,\r\n        VirtualKeyDirective,\r\n        KeyboardButtonComponent,\r\n        KeyboardComponent,\r\n        InputFocusDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        AuthRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class KeyboardService {\r\n    private inputElement: HTMLInputElement;\r\n    private keyboardEvent: EventEmitter<string>;\r\n\r\n    constructor() {\r\n        this.keyboardEvent = new EventEmitter();\r\n    }\r\n\r\n\r\n    get onKeyPress(): Observable<string> {\r\n        return this.keyboardEvent.asObservable();\r\n    }\r\n\r\n    emitKey(key: string): void {\r\n        this.inputElement.focus();\r\n        this.keyboardEvent.emit(key);\r\n    }\r\n\r\n    setElement(element: HTMLInputElement): void {\r\n        this.inputElement = element;\r\n    }\r\n}","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { KeyboardService } from '../services/keyboard.service';\r\n\r\n@Directive({\r\n    selector: '[ngModel],[virtualkey]'\r\n})\r\nexport class VirtualKeyDirective implements OnInit {\r\n\r\n    constructor(\r\n        private formInputElement: ElementRef,\r\n        private ngModel: NgModel,\r\n        private keyboardService: KeyboardService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.keyboardService.onKeyPress.subscribe(key => {\r\n            if (document.activeElement === this.formInputElement.nativeElement) {\r\n                this.ngModel.valueAccessor.writeValue(key);\r\n\r\n                const event = new Event('input', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                });\r\n\r\n                this.formInputElement.nativeElement.dispatchEvent(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    @HostListener(\"focus\")\r\n    onFocus(): void {\r\n        this.keyboardService.setElement(this.formInputElement.nativeElement);\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { KeyboardService } from 'src/app/services/keyboard.service';\r\n\r\n@Component({\r\n    selector: \"app-keyboard\",\r\n    templateUrl: \"./keyboard.component.html\",\r\n    styleUrls: [\"keyboard.component.scss\"]\r\n})\r\nexport class KeyboardComponent {\r\n    numbers: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\n\r\n    constructor(private keyboardService: KeyboardService) { }\r\n\r\n    onNumberClick(e: Event, key: string): void {\r\n        e.preventDefault();\r\n        // console.log(key)\r\n        this.keyboardService.emitKey(key);\r\n    }\r\n}","<div class=\"keyboard\">\r\n    <app-keyboard-button *ngFor=\"let number of numbers\" [number]=\"number\" (click)=\"onNumberClick($event, number)\">\r\n    </app-keyboard-button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\n\r\n@Component({\r\n    selector: 'app-id',\r\n    templateUrl: './id.component.html',\r\n    styleUrls: ['./id.component.scss']\r\n})\r\nexport class IdComponent implements OnInit {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        public formsService: FormsService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n\r\n    onSendId(form: NgForm): void {\r\n        if (form.invalid) return;\r\n\r\n        console.log(form.value)\r\n        this.authService.checkUserId(form.value)\r\n            .subscribe((result) => {\r\n                this.router.navigate(['/main/teacher'])\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n\r\n    <div class=\"welcome\">\r\n        <h3>כיף שבאת!</h3>\r\n        <p>שלום חונכים וחונכות להתחבר בבקשה</p>\r\n    </div>\r\n    <form #form=\"ngForm\" (ngSubmit)=\"onSendId(form)\">\r\n        <div class=\"input-group\">\r\n            <label for=\"userId\">ת.ז</label>\r\n            <div class=\"idInput\">\r\n                <input [ngClass]=\"this.formsService.displayClass(userId.control)\" id=\"id-a\" required type=\"number\"\r\n                    ngModel pattern=\"^[0-9_-]{9,9}$\" name=\"userId\" #userId=\"ngModel\" class=\"form-control\"\r\n                    placeholder=\"הכנס ת.ז.\">\r\n            </div>\r\n        </div>\r\n        <div class=\"errorsContainer\" *ngIf=\"this.formsService.formControlStatus(userId.control)\">\r\n            <div class=\"error\" *ngIf=\"userId.errors.required\">שדה חובה!</div>\r\n            <div class=\"error\" *ngIf=\"userId.errors.pattern\">חובה להזין 9 מספרים</div>\r\n        </div>\r\n        <button class=\"mainButton\" [disabled]=\"form.invalid\">\r\n            התחבר\r\n        </button>\r\n    </form>\r\n</div>"],"sourceRoot":"webpack:///"}