{"version":3,"sources":["./src/app/auth/email/email.component.ts","./src/app/auth/email/email.component.html","./src/app/auth/auth.routing.module.ts","./src/app/directives/focus.directive.ts","./src/app/auth/confirm/confirm.component.ts","./src/app/auth/confirm/confirm.component.html","./src/app/auth/auth.module.ts","./src/app/directives/virtual-key.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FormsService } from 'src/app/services/forms/forms.service';\r\nimport { LoaderService } from 'src/app/services/loader.service';\r\n\r\n@Component({\r\n    selector: 'app-email',\r\n    templateUrl: './email.component.html',\r\n    styleUrls: ['./email.component.scss']\r\n})\r\nexport class EmailComponent implements OnInit {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        public formsService: FormsService,\r\n        private router: Router,\r\n        private loaderService: LoaderService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n\r\n    onSendEmail(form: NgForm): void {\r\n        if (form.invalid) return;\r\n        // console.log(form.value.teacherEmail)\r\n        this.loaderService.setStatus(true)\r\n        this.authService.authTeacherEmail(form.value.teacherEmail).subscribe((result) => {\r\n            this.router.navigate(['/auth/confirm'])\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<app-http-error-messages></app-http-error-messages>\r\n<div class=\"wrapper\">\r\n    <div class=\"logo animate_animated animate_flipInX\">\r\n        <img\r\n            src=\"../../../assets/Group 1764.svg\"\r\n            alt\r\n        >\r\n    </div>\r\n    <form\r\n        #form=\"ngForm\"\r\n        (ngSubmit)=\"onSendEmail(form)\"\r\n    >\r\n        <div class=\"input-group\">\r\n            <label for=\"teacherEmail\">דואר אלקטרוני</label>\r\n            <div class=\"idInput\">\r\n                <input\r\n                    [ngClass]=\"this.formsService.displayClass(teacherEmail.control)\"\r\n                    id=\"id-a\"\r\n                    required\r\n                    type=\"email\"\r\n                    ngModel\r\n                    pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\r\n                    name=\"teacherEmail\"\r\n                    #teacherEmail=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"דואר אלקטרוני\"\r\n                >\r\n            </div>\r\n        </div>\r\n        <div\r\n            class=\"errorsContainer\"\r\n            *ngIf=\"this.formsService.formControlStatus(teacherEmail.control)\"\r\n        >\r\n            <div\r\n                class=\"error-validate-form-message\"\r\n                *ngIf=\"teacherEmail.errors.required\"\r\n            >\r\n                שדה חובה!\r\n            </div>\r\n            <div\r\n                class=\"error-validate-form-message\"\r\n                *ngIf=\"teacherEmail.errors.pattern\"\r\n            >\r\n            דואר שגוי            \r\n         </div>\r\n        </div>\r\n        <div class=\"loginButton\">\r\n            <img\r\n                src=\"../../../assets/Group 1789.svg\"\r\n                alt\r\n            >\r\n            <button\r\n                class=\"mainButton\"\r\n                [disabled]=\"form.invalid\"\r\n            >\r\n                התחברו\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>\r\n<app-loader></app-loader>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmailComponent } from \"./email/email.component\";\r\nimport { ConfirmComponent } from \"./confirm/confirm.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'email',\r\n        component: EmailComponent\r\n    },\r\n    {\r\n        path: 'confirm',\r\n        component: ConfirmComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class AuthRoutingModule { }","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appInputFocus]'\r\n})\r\nexport class InputFocusDirective {\r\n\r\n    constructor(private formElement: ElementRef) { }\r\n\r\n    @HostListener('input')\r\n    check() {\r\n        setTimeout(() => {\r\n            const input = this.formElement.nativeElement.querySelector('.ng-invalid')\r\n            if (input) {\r\n                input.focus();\r\n            }\r\n        }, 0);\r\n    }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ConfirmCode } from \"src/app/interfaces/ConfirmCode\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { LoaderService } from \"src/app/services/loader.service\";\r\nimport { FormsService } from \"../../services/forms/forms.service\";\r\n\r\n@Component({\r\n    selector: \"app-confirm\",\r\n    templateUrl: \"./confirm.component.html\",\r\n    styleUrls: [\"./confirm.component.scss\"],\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n    constructor(\r\n        public formsService: FormsService,\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private loaderService: LoaderService\r\n    ) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    onSendConfirmCode(form: NgForm): void {\r\n        console.log(form);\r\n        if (form.invalid) return;\r\n\r\n        let code: string = \"\";\r\n        for (const num in form.value) {\r\n            code += form.value[num];\r\n        }\r\n\r\n        const codeToSend: ConfirmCode = {\r\n            code: Number(code),\r\n        };\r\n\r\n        // console.log(form.value);\r\n        // console.log(codeToSend);\r\n        this.authService.confirmCode(codeToSend).subscribe((result) => {\r\n            form.resetForm()\r\n            this.router.navigate([\"main/teacher\"]);\r\n        });\r\n    }\r\n\r\n    onChange(event: any): void {\r\n        let { value } = event.target;\r\n        if (String(value).length > 1) {\r\n            event.target.value = value.slice(1, 2);\r\n        }\r\n    }\r\n\r\n    onResendConfirmCode(): void {\r\n        this.authService.resendConfirmCode().subscribe((result) => {\r\n            console.log(result);\r\n            alert(result);\r\n        });\r\n    }\r\n}\r\n","<div class=\"confirmWrapper\">\r\n    <p class=\"m-3\">נשלח מסרון, נא הזינו הקוד</p>\r\n    <form #form=\"ngForm\" appInputFocus (ngSubmit)=\"onSendConfirmCode(form)\" class=\"m-3\">\r\n        <div class=\"smsCode\">\r\n            <input id=\"num-a\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"first\" autofocus ngModel=\"virtualkey\"\r\n                #one=\"ngModel\" (input)=\"onChange($event)\">\r\n            <input id=\"num-b\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"second\" required ngModel=\"virtualkey\"\r\n                #two=\"ngModel\" (input)=\"onChange($event)\">\r\n            <input id=\"num-c\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"third\" ngModel=\"virtualkey\"\r\n                #three=\"ngModel\" (input)=\"onChange($event)\">\r\n            <input id=\"num-d\" required type=\"number\" pattern=\"^\\d{1}$\" name=\"fourth\" ngModel=\"virtualkey\"\r\n                #four=\"ngModel\" (input)=\"onChange($event)\">\r\n        </div>\r\n        <div class=\"codeError animate__animated animate__headShake\"><span>קוד שגוי, נסה שנית</span></div>\r\n        <!-- <div *ngIf=\"form.invalid && form.submitted\" class=\"codeError animate__animated animate__headShake\"> <span>\r\n                חסרה ספרה </span>\r\n        </div> -->\r\n        <button class=\"mainButton\" id=\"btn-confirm\" type=\"submit\" [disabled]=\"form.invalid\">\r\n            שלח\r\n        </button>\r\n    </form>\r\n    <small>Expire Time: 2 minutes</small>\r\n    <app-keyboard></app-keyboard>\r\n    <small (click)=\"onResendConfirmCode()\">לא הגיע קוד, שלח מחדש</small>\r\n</div>\r\n<app-loader></app-loader>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmailComponent } from './email/email.component';\r\nimport { ConfirmComponent } from './confirm/confirm.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { VirtualKeyDirective } from \"../directives/virtual-key\";\r\nimport { InputFocusDirective } from '../directives/focus.directive';\r\nimport { AuthRoutingModule } from \"./auth.routing.module\";\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        EmailComponent,\r\n        ConfirmComponent,\r\n        VirtualKeyDirective,\r\n        InputFocusDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        AuthRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AuthModule { }\r\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { KeyboardService } from '../services/keyboard.service';\r\n\r\n@Directive({\r\n    selector: '[ngModel],[virtualkey]'\r\n})\r\nexport class VirtualKeyDirective implements OnInit {\r\n\r\n    constructor(\r\n        private formInputElement: ElementRef,\r\n        private ngModel: NgModel,\r\n        private keyboardService: KeyboardService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.keyboardService.onKeyPress().subscribe(key => {\r\n            if (document.activeElement === this.formInputElement.nativeElement) {\r\n                this.ngModel.valueAccessor.writeValue(key);\r\n\r\n                const event = new Event('input', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                });\r\n\r\n                this.formInputElement.nativeElement.dispatchEvent(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    @HostListener(\"focus\")\r\n    onFocus(): void {\r\n        this.keyboardService.setElement(this.formInputElement.nativeElement);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}